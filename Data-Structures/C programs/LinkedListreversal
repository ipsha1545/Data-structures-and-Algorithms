#include<stdio.h>
#include<stdlib.h>

struct node{
    int data;
    struct node* next;
};
//Function to reverse a linkedlist
void reverse(struct node** head)
{
    struct node *p = NULL;
    struct node *curr = *head;
    struct node *n;
    
    while(curr != NULL){
        n = curr->next;
        curr->next = p;
        p = curr;
        curr = n;
        }
        *head = p;
}
//Function to print a linkedlist

void print(struct node *head){
    struct node *tmp = head;
    
    while(tmp!=NULL){
        printf("%d ", tmp->data);
        tmp = tmp->next;
    }
    
}

//Inserting an element 

void push(struct node **head,int dat){
    struct node* newnode = (struct node*)malloc(sizeof(struct node));
    newnode->data = dat;
    newnode->next = *head;
    *head = newnode;
}

//struct node* p = headref;

//deleting an element from the middle of a ll(considers at the beginning or at the end too)
//basically deleting anywhere

void deletenode(struct node **headref, int position){
    int k = 1;
    struct node* q;
    if(*headref == NULL) return;
    struct node *p = *headref;
    if(position == 1){
    *headref = (*headref)->next;
    free(p);
    return;
    }
    
    else{
        while(p!= NULL && k<position){
            k++;
            q = p;
            p = p->next;
        }
        if(p == NULL){
            printf("Position does not exist");
        }
        else{
        q->next = p->next;
        free(p);  
        }
    }
}

//inserting anywhere

void insertanywhere(struct node** headref,int position,int data){
    int k = 1;
    struct node* newnode = (struct node*)malloc(sizeof(struct node));
    struct node  *q,*p;
    newnode->data = data;
    if(!newnode){
      printf("Memory error");
      return;    
    }
    p = *headref;
    if(position == 1){
       newnode->next = p;
       *headref = newnode;
    }
    else{
        while(p!= NULL && k < position){
            k++;
            q = p;
            p = p->next;
        }
        
        q->next = newnode;
        newnode->next = p;
    }
}

int main(){
   struct node* head = NULL;
   insertanywhere(&head,1,234);
   insertanywhere(&head,2,23);
   insertanywhere(&head,3,8);
   insertanywhere(&head,4,17);
   deletenode(&head,3);
  /* push(&head,3);
   push(&head,9);
   push(&head,17);
   push(&head,19);
   push(&head,12);*/
   
     //printf("Given linked list\n");
     print(head);    
     //reverse(&head);                      
     //printf("\nReversed Linked list \n");
     //print(head);
     //insertanywhere(&head,34,3);
     //print(head);
     
    
}
